---
import DynamicHead from "../components/dynamicHead.astro";

// Access the raw request URL
const requestUrl = Astro.request.url;
const fullUrl = new URL(requestUrl);
const rawParams = fullUrl.searchParams;
const decodedParams = new URLSearchParams(rawParams);
const hasResults = decodedParams.has('q1');
const ogImageUrl = hasResults 
  ? `${fullUrl.origin}/api/og${fullUrl.search}`
  : `${fullUrl.origin}/default-og.jpg`;

// console.log('=== Server-Side Processing ===');
// console.log('1. Full URL:', fullUrl.toString());
// console.log('2. Search string:', fullUrl.search);
// console.log('3. Raw params:', Object.fromEntries(rawParams.entries()));

// Instead of trying to decode the values (which are already decoded by URLSearchParams),
// just use them as-is for the decodedParams

// console.log('4. Has results:', hasResults);
// console.log('5. Decoded params:', Object.fromEntries(decodedParams.entries()));

// Use the raw search string for the OG image URL to preserve encoding

// console.log('6. OG Image URL:', ogImageUrl);
---

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <DynamicHead 
      ogImageUrl={ogImageUrl}
      hasResults={hasResults}
    />
  </head>
  <body>
    <div id="debug"></div>

    <script define:vars={{ hasResults, ogImageUrl, requestUrl }}>
      // Get the parameters before they're cleared
      const currentUrl = new URL(window.location.href);
      const params = currentUrl.searchParams;
      
      const debugInfo = {
        serverSide: {
          requestUrl,
          hasResults,
          ogImageUrl
        },
        clientSide: {
          currentUrl: window.location.href,
          searchString: window.location.search,
          params: Object.fromEntries(params.entries()),
          hasQ1: params.has('q1')
        }
      };

      document.getElementById('debug').innerHTML = `
        <pre>${JSON.stringify(debugInfo, null, 2)}</pre>
      `;
    </script>
  </body>
</html>