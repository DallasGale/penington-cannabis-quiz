---
import DynamicHead from "../components/dynamicHead.astro";

// Access the raw request URL
const requestUrl = Astro.request.url;
console.log('Request URL:', requestUrl);

// Parse the URL manually to ensure we get the parameters
const fullUrl = new URL(requestUrl);
const rawParams = fullUrl.searchParams;

console.log('=== Server-Side Processing ===');
console.log('1. Full URL:', fullUrl.toString());
console.log('2. Search string:', fullUrl.search);
console.log('3. Raw params:', Object.fromEntries(rawParams.entries()));

// Create decoded parameters
const decodedParams = new URLSearchParams();
for (const [key, value] of rawParams.entries()) {
  decodedParams.set(key, decodeURIComponent(value));
}

const hasResults = decodedParams.has('q1');
console.log('4. Has results:', hasResults);
console.log('5. Decoded params:', Object.fromEntries(decodedParams.entries()));

// Generate OG image URL using the raw search string to preserve encoding
const ogImageUrl = hasResults 
  ? `${fullUrl.origin}/api/og${fullUrl.search}`
  : `${fullUrl.origin}/default-og.png`;

console.log('6. OG Image URL:', ogImageUrl);
---

---

<html>
  <head>
     <!-- Add default meta tags that won't change -->
     <meta charset="utf-8" />
     <meta name="viewport" content="width=device-width, initial-scale=1" />
     
     <!-- Dynamic OG tags -->
     <DynamicHead 
       ogImageUrl={ogImageUrl}
       hasResults={hasResults}
     />
  </head>
  <body>

    <div id="debug"></div>

    <script define:vars={{ hasResults, ogImageUrl, requestUrl }}>
      // Get the parameters before they're cleared
      const currentUrl = new URL(window.location.href);
      const params = currentUrl.searchParams;
      
      const debugInfo = {
        serverSide: {
          requestUrl,
          hasResults,
          ogImageUrl
        },
        clientSide: {
          currentUrl: window.location.href,
          searchString: window.location.search,
          params: Object.fromEntries(params.entries()),
          hasQ1: params.has('q1')
        }
      };

      document.getElementById('debug').innerHTML = `
        <pre>${JSON.stringify(debugInfo, null, 2)}</pre>
      `;

      // Clear URL only after we've captured the parameters
      // if (hasResults && window.history.replaceState) {
      //   window.history.replaceState(
      //     { params: Object.fromEntries(decodedParams.entries()) }, 
      //     document.title, 
      //     "/"
      //   );
      // }
    </script>
  </body>
</html>